name: Deploy to Remote Server via Webhook

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 워크플로우 실행

jobs:
  build-and-push-docker-image:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
      image_tag_latest: latest
      image_tag_sha: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trigger-remote-deployment:
    name: Trigger remote server deployment
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Send webhook to remote server
        env:
          WEBHOOK_URL: ${{ secrets.REMOTE_WEBHOOK_URL }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET_TOKEN }}
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          IMAGE_TAG: ${{ needs.build-and-push-docker-image.outputs.image_tag_latest }}
        run: |
          echo "Sending webhook to: $WEBHOOK_URL"
          echo "Image to deploy: $IMAGE_NAME:$IMAGE_TAG"

          JSON_PAYLOAD=$(cat <<EOF
          {
            "image_name": "$IMAGE_NAME",
            "image_tag": "$IMAGE_TAG"
          }
          EOF
          )

          echo "Payload: $JSON_PAYLOAD"

          curl -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -H "X-Webhook-Secret: \"$WEBHOOK_SECRET\"" \
            -d "$JSON_PAYLOAD" \
            --fail-with-body
